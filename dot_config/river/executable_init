#!/bin/sh
dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP

restart() { ( killall $1; eval $@ )>/dev/null 2>&1 & }
start()   { ( ps -C $1 || eval $@ )>/dev/null 2>&1 & }

# autostart
start swayidle -w before-sleep \"waylock -fork-on-lock\" timeout 300 \"waylock -fork-on-lock\"
restart waybar
start nm-applet --indicator
start way-displays
start wlsunset -l 47.6 -L 9.4
start mattermost-desktop
start flameshot

# execute this file
riverctl map normal Super+Shift C spawn "$HOME/.config/river/init"

# menu https://github.com/enkore/j4-dmenu-desktop#i-want-it-to-display-normal-binaries-too-yes
riverctl map normal Super D spawn "j4-dmenu-desktop --dmenu='(cat ; (stest -flx $(echo $PATH | tr : ' ') | sort -u)) | bemenu -i -p \"run:\"' --term=$TERMINAL"

# lock, suspend, etc.
riverctl map normal Super Escape spawn "waylock"
riverctl map normal Super+Shift+Control X exit
for mode in normal locked; do
    [ "$HOSTNAME" != "G505s" ] && riverctl map $mode Super+Shift Z spawn "waylock & systemctl suspend"
    riverctl map $mode Super+Shift+Control Z spawn "shutdown now"
    riverctl map $mode Super+Alt+Shift+Control Z spawn "shutdown -r now"
    riverctl map $mode Super F4 spawn "wlr-randr --output eDP-1 --toggle"
done

# terminal
riverctl map normal Super Return spawn $TERMINAL

# screenshot
riverctl map normal Super S spawn "flameshot gui"
riverctl map normal None Print spawn "flameshot gui"

# screen recording fullscreen
riverctl map normal Super+Control S spawn '{
    set -e
    if ps -C wf-recorder; then
        VID="$(pgrep -xa wf-recorder | cut -d" " -f4)"
        killall -SIGINT wf-recorder
        notify-send "Screen recording stopped." "Saved as $VID."
    else
        OUTPUT="$(lswt -j | jq -r ".[] | select(.activated == true) | .outputs[0]")"
        VID="$HOME/Pictures/Screenshots/rec_$(date +%Y%m%d_%Hh%Mm%S.%2Ns).mp4"
        notify-send -t 1000 "Screen recording startet..."
        wf-recorder -f "$VID" -o "$OUTPUT"
    fi
}>/dev/null 2>&1'

# screen recording area
riverctl map normal Super+Shift+Control S spawn '{
    set -e
    if ps -C wf-recorder; then
        VID="$(pgrep -xa wf-recorder | cut -d" " -f4)"
        killall -SIGINT wf-recorder
        notify-send "Screen recording stopped." "Saved as $VID."
    else
        OUTPUT="$(lswt -j | jq -r ".[] | select(.activated == true) | .outputs[0]")"
        VID="$HOME/Pictures/Screenshots/rec_$(date +%Y%m%d_%Hh%Mm%S.%2Ns).mp4"
        AREA="$(slurp)"
        notify-send -t 1000 "Screen recording startet..."
        wf-recorder -f "$VID" -o "$OUTPUT" -g "$AREA"
    fi
}>/dev/null 2>&1'

# VPN
riverctl map normal Super+Shift V spawn '{
    if nmcli connection show wireguard | grep activated; then
        nmcli connection down wireguard
    else
        nmcli connection up wireguard
    fi
}>/dev/null 2>&1'

# mako silent mode
riverctl map normal Super+Shift M spawn '{
    if makoctl mode | grep silent; then
        makoctl dismiss -a
        makoctl mode -r silent
    else
        makoctl mode -a silent
    fi
}>/dev/null 2>&1'

# view management
riverctl attach-mode bottom
riverctl map normal Super J focus-view next
riverctl map normal Super K focus-view previous
riverctl map normal Super+Shift J swap next
riverctl map normal Super+Shift K swap previous
riverctl map normal Super X close
riverctl map normal Super F toggle-fullscreen

# tag management
count=0
for i in q w e r t y u i o; do
    tags=$((1 << count))
    count=$((count + 1))
    riverctl map normal Super $i set-focused-tags $tags
    riverctl map normal Super+Shift $i set-view-tags $tags
    riverctl map normal Super+Control $i toggle-focused-tags $tags
    riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
done
all_tags=$(( (1 << 9) - 1 ))
riverctl map normal Super p set-focused-tags $all_tags
riverctl map normal Super+Shift p set-view-tags $all_tags

riverctl rule-add -app-id "Mattermost" tags $((1 << 7))

# output management
riverctl map -repeat normal Super Period focus-output next
riverctl map -repeat normal Super Comma focus-output previous
riverctl map normal Super+Shift Period send-to-output -current-tags next
riverctl map normal Super+Shift Comma send-to-output -current-tags previous

# floating management
riverctl map normal Super Space toggle-float
riverctl map-pointer normal Super BTN_LEFT move-view
riverctl map-pointer normal Super BTN_RIGHT resize-view
riverctl rule-add -app-id "pavucontrol" float
riverctl rule-add -app-id "flameshot" float
riverctl rule-add -title "LibreWolf — Sharing Indicator" float
riverctl rule-add -title "Firefox — Sharing Indicator" float
riverctl rule-add -title "Yubico Authenticator" float

# window decoration
riverctl rule-add -app-id "*" ssd

# layout config
start stacktile --inner-padding 0 --outer-padding 0 --per-tag-config --drop-empty-configs --secondary-ratio 0.5 --secondary-count 2
riverctl default-layout stacktile
riverctl map -repeat normal Super H send-layout-cmd stacktile "primary_ratio -0.05"
riverctl map -repeat normal Super L send-layout-cmd stacktile "primary_ratio +0.05"
riverctl map -repeat normal Super+Control J send-layout-cmd stacktile "secondary_ratio +0.05"
riverctl map -repeat normal Super+Control K send-layout-cmd stacktile "secondary_ratio -0.05"
riverctl map normal Super+Shift L send-layout-cmd stacktile "primary_count -1"
riverctl map normal Super+Shift H send-layout-cmd stacktile "primary_count +1"
riverctl map normal Super+Control L send-layout-cmd stacktile "secondary_count -1"
riverctl map normal Super+Control H send-layout-cmd stacktile "secondary_count +1"
riverctl map normal Super+Shift F spawn "riverctl send-layout-cmd stacktile 'all_primary true' && riverctl send-layout-cmd stacktile 'primary_sublayout full'"
riverctl map normal Super+Shift+Control F spawn "riverctl send-layout-cmd stacktile 'all_primary false' && riverctl send-layout-cmd stacktile 'primary_sublayout columns'"

# controls
for mode in normal locked; do
    riverctl map -repeat $mode Super Bracketleft spawn "pamixer --allow-boost --set-limit 150 -d 5"
    riverctl map -repeat $mode Super Bracketright spawn "pamixer --unmute --allow-boost --set-limit 150 -i 5"
    riverctl map $mode Super M spawn "pamixer --toggle-mute"
    riverctl map -repeat $mode None XF86AudioLowerVolume spawn "pamixer --allow-boost --set-limit 150 -d 5"
    riverctl map -repeat $mode None XF86AudioRaiseVolume spawn "pamixer --unmute --allow-boost --set-limit 150 -i 5"
    riverctl map $mode None XF86AudioMute spawn "pamixer --toggle-mute"
    riverctl map -repeat $mode None XF86MonBrightnessDown spawn "brightnessctl s 5%-"
    riverctl map -repeat $mode None XF86MonBrightnessUp spawn "brightnessctl s +5%"
    riverctl map -repeat $mode Super+Shift Bracketleft spawn "brightnessctl s 5%-"
    riverctl map -repeat $mode Super+Shift Bracketright spawn "brightnessctl s +5%"
done

# passthrough mode
riverctl declare-mode passthrough
riverctl map normal Super Grave enter-mode passthrough
riverctl map passthrough Super Grave enter-mode normal

# repeat rate and delay
riverctl set-repeat 75 175

# style
riverctl background-color 0x000000
riverctl border-color-focused 0x63d1f4
riverctl border-color-unfocused 0x000000
riverctl border-color-urgent 0xffff00
riverctl border-width 2
